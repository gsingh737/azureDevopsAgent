#cloud-config
package_upgrade: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - unzip

write_files:
- content: |
    #!/bin/bash
    test -n "$1" || { echo "The argument az_devops_url must be provided"; exit 1; }
    az_devops_url="$1"
    test -n "$2" || { echo "The argument az_devops_pat must be provided"; exit 1; }
    az_devops_pat="$2"
    test -n "$3" || { echo "The argument az_devops_agent_name must be provided"; exit 1; }
    az_devops_agent_name="$3"
    test -n "$4" || { echo "The argument az_devops_agent_pool must be provided"; exit 1; }
    az_devops_agent_pool="$4"
    test -n "$5" || { echo "The argument az_devops_agents_per_vm must be provided"; exit 1; }
    az_devops_agents_per_vm="$5"

    #strict mode, fail on error
    set -euo pipefail


    echo "start"

    echo "install Ubuntu packages"

    # To make it easier for build and release pipelines to run apt-get,
    # configure apt to not require confirmation (assume the -y argument by default)
    export DEBIAN_FRONTEND=noninteractive
    echo 'APT::Get::Assume-Yes "true";' > /etc/apt/apt.conf.d/90assumeyes
    echo 'Dpkg::Use-Pty "0";' > /etc/apt/apt.conf.d/00usepty


    apt-get update
    apt-get install -y --no-install-recommends ca-certificates jq apt-transport-https \
                docker-ce docker-ce-cli containerd.io

    echo "Allowing agent to run docker"

    usermod -aG docker azuredevopsuser

    echo "Installing Azure CLI"

    curl -sL https://aka.ms/InstallAzureCLIDeb | bash

    echo "install VSTS Agent"

    cd /home/azuredevopsuser
    mkdir -p agent
    cd agent

    AGENTRELEASE="$(curl -s https://api.github.com/repos/Microsoft/azure-pipelines-agent/releases/latest | grep -oP '"tag_name": "v\K(.*)(?=")')"
    AGENTURL="https://vstsagentpackage.azureedge.net/agent/$${AGENTRELEASE}/vsts-agent-linux-x64-$${AGENTRELEASE}.tar.gz"
    echo "Release "$${AGENTRELEASE}" appears to be latest" 
    echo "Downloading..."
    wget -q -O agent_package.tar.gz $${AGENTURL} 


    for agent_num in $(seq 1 $az_devops_agents_per_vm); do
      agent_dir="agent-$agent_num"
      mkdir -p "$agent_dir"
      pushd "$agent_dir"
        agent_id="$${agent_num}_$${az_devops_agent_name}"
        echo "installing agent $agent_id"
        tar zxf ../agent_package.tar.gz
        chmod -R 777 .
        echo "extracted"
        ./bin/installdependencies.sh
        echo "dependencies installed"

        if test -e .agent; then
          echo "attempting to uninstall agent"
          ./svc.sh stop || true
          ./svc.sh uninstall || true
          sudo -u azuredevopsuser ./config.sh remove --unattended --auth pat --token "$az_devops_pat" || true
        fi

        echo "running installation"
        sudo -u azuredevopsuser ./config.sh --unattended --url "$az_devops_url" --auth pat --token "$az_devops_pat" --pool "$az_devops_agent_pool" --agent "$agent_id" --acceptTeeEula --work ./_work --runAsService
        echo "configuration done"
        ./svc.sh install
        echo "service installed"
        ./svc.sh start
        echo "service started"
        echo "config done"
      popd
    done

  path: /home/azuredevopsuser/start.sh
  permissions: '0555'

runcmd:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - apt-get update -y
  - apt-get install -y docker-ce docker-ce-cli containerd.io
  - systemctl start docker
  - systemctl enable docker
  - chown -R azuredevopsuser:azuredevopsuser /home/azuredevopsuser/
  - sudo ./home/azuredevopsuser/start.sh '${devops_url}' '${devops_pat}' '${devops_agent_name}' '${devops_pool}' '${devops_agent_per_vm}'